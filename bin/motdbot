#!/usr/bin/env perl
use v5.38;
use utf8;

use Class::Load qw(load_class);
use Mastodon::Client;
use Text::CSV qw(csv);
use YAML ();
use Encode ('encode_utf8');
use Getopt::Long ('GetOptionsFromArray');
use Mojo::UserAgent;
use Mojo::Date;
use Mojo::File;

exit(main(@ARGV));

sub main {
    my @args = @_;

    my %opts;
    GetOptionsFromArray(
        \@args,
        \%opts,
        'mastodon-config=s',
        'message-builder=s',
        'y|yes',
        'today=s',
    ) or die("Error in arguments, but I'm not telling you what it is.");

    maybe_post(\%opts, build_message(\%opts));

    return 0;
}

sub today () {
    my ($year, $mon, $day) = (localtime())[5,4,3];
    return sprintf('%04d-%02d-%02d', ($year + 1900), ($mon + 1), $day);
}

sub build_message ($opts) {
    my $class = "Motdbot::MessageBuilder::" . $opts->{"message-builder"};

    load_class($class);

    $class->new( today => ($opts->{today} // today()) )->build;
}

sub maybe_post ($opts, $msg) {
    unless ($msg) {
        say "# Message is empty.";
        return;
    }

    say "# Message (length=" . length($msg) . ")";
    say "-------8<---------";
    say encode_utf8($msg);
    say "------->8---------";

    maybe_toot($opts, $msg);
}

sub maybe_toot ($opts, $msg) {
    my $config;

    if ($opts->{'mastodon-config'} && -f $opts->{'mastodon-config'}) {
        say "[INFO] Loading config from " . $opts->{'mastodon-config'};
        $config = YAML::LoadFile( $opts->{'mastodon-config'} );
    } else {
        say "[INFO] No Mastodon config.";
    }

    if ($opts->{y} && $config) {
        say "#=> Toot for real";
        my $mastodon = Mastodon::Client->new(
            "instance"        => $config->{"instance"},
            "name"            => $config->{"name"},
            "client_id"       => $config->{"client_id"},
            "client_secret"   => $config->{"client_secret"},
            "access_token"    => $config->{"access_token"},
            "coerce_entities" => 1,
        );

        my $r = $mastodon->post_status($msg);
        say $r->url;
    } else {
        say "#=> Not tooting";
    }
}
